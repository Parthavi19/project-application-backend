generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int         @id @default(autoincrement()) 
  name              String
  email             String      @unique
  role              String      // "student" or "faculty"
  department        String?

  projects          Project[]   @relation("FacultyProjects")
  applications      Application[] @relation("StudentApplications")
  applicationsAsFaculty Application[] @relation("FacultyApplications")
  meetingsAsStudent Meeting[]   @relation("StudentMeetings")
  meetingsAsFaculty Meeting[]   @relation("FacultyMeetings")
}

model Project {
  id          Int       @id @default(autoincrement())
  title       String
  description String
  facultyId   Int
  faculty     User      @relation(name: "FacultyProjects", fields: [facultyId], references: [id])

  applications Application[]
  meetings     Meeting[]
}

model Application {
  id          Int      @id @default(autoincrement())
  studentId   Int
  facultyId   Int
  projectId   Int
  status      String   @default("pending") // "pending", "approved", "rejected"

  student     User     @relation(name: "StudentApplications", fields: [studentId], references: [id])
  faculty     User     @relation(name: "FacultyApplications", fields: [facultyId], references: [id])
  project     Project  @relation(fields: [projectId], references: [id])
}

model Meeting {
  id         Int     @id @default(autoincrement())
  studentId  Int
  facultyId  Int
  projectId  Int
  status     String  @default("scheduled") // "scheduled", "completed", "cancelled"

  student    User    @relation(name: "StudentMeetings", fields: [studentId], references: [id])
  faculty    User    @relation(name: "FacultyMeetings", fields: [facultyId], references: [id])
  project    Project @relation(fields: [projectId], references: [id])
}

